// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.166.1/containers/azure-terraform
{
    "name": "Azure Terraform (Community)",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            "TERRAFORM_VERSION": "latest",
            "TFLINT_VERSION": "latest",
            "INSTALL_AZURE_CLI": "true",
            "INSTALL_DOCKER": "true", // Enable Docker CLI for image build/push
            "INSTALL_ZSH": "true",
            "UPGRADE_PACKAGES": "false"
        }
    },
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind"
    ],
    "overrideCommand": false,
    "runArgs": [
        "--env-file",
        ".devcontainer/devcontainer.env"
    ],
    "remoteEnv": {
        // Sets environment variables required for terrafom remote backend
        "TF_BACKEND_RESOURCE_GROUP": "${containerEnv:TF_BACKEND_RESOURCE_GROUP}",
        "TF_BACKEND_LOCATION": "${containerEnv:TF_BACKEND_LOCATION}",
        "TF_BACKEND_STORAGE_ACCOUNT": "${containerEnv:TF_BACKEND_STORAGE_ACCOUNT}",
        "TF_BACKEND_CONTAINER": "${containerEnv:TF_BACKEND_CONTAINER}",
        "TF_BACKEND_KEY": "${containerEnv:TF_BACKEND_KEY}"
        // Use 'TF_VAR' prefix to set input variables for terraform templates
        // "TF_VAR_rg_name":  "${containerEnv:TF_VAR_RG_NAME}"
    },
    // VS Code custom settings and extensions
    "customizations": {
        "vscode": {
            "settings": {
                "terminal.integrated.defaultProfile.linux": "zsh",
                "terraform.languageServer": {
                    "enabled": true,
                    "args": ["serve"],
                    "path": ""
                },
                "terraform.languageServer.terraform.path": "",
                "terraform.languageServer.terraform.logFilePath": "",
                "terraform.languageServer.terraform.timeout": "",
                "terraform.languageServer.ignoreSingleFileWarning": false,
                "terraform.languageServer.indexing.ignoreDirectoryNames": [],
                "terraform.languageServer.indexing.ignorePaths": [],
                "azureTerraform.terminal": "integrated"
            },
            "extensions": [
                "hashicorp.terraform",
                "ms-azuretools.vscode-azureterraform",
                "ms-azuretools.vscode-docker",
                "ms-vscode.azurecli",
                "tyriar.sort-lines",
                "GitHub.copilot",
                "GitHub.copilot-chat",
                "ms-vscode.vscode-node-azure-pack",
                "ms-azuretools.vscode-containers",
                "ms-vscode-remote.remote-containers",
                "solomonkinard.todos",
                "ms-kubernetes-tools.vscode-kubernetes-tools" // Recommended for K8s
            ]
        }
    },
    // Optionally forward common K3s/Traefik ports for browser access
    "forwardPorts": [80, 443],
    // Run commands after container creation to configure Zsh, completions, and Oh My Zsh with agnoster theme
    "postCreateCommand": "if [ ! -d /home/vscode/.oh-my-zsh ]; then RUNZSH=no CHSH=no KEEP_ZSHRC=yes bash -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"; fi && echo 'fpath+=(/usr/share/zsh-completions)' >> /home/vscode/.zshrc && echo 'autoload -U compinit && compinit' >> /home/vscode/.zshrc && sed -i 's/ZSH_THEME=\".*\"/ZSH_THEME=\"agnoster\"/' /home/vscode/.zshrc && chown vscode:vscode /home/vscode/.zshrc",
    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    "remoteUser": "vscode"
}